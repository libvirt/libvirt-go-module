
stages:
  - containers
  - builds
  - sanity_checks

.git_build_vars: &git_build_vars |
  export MAKEFLAGS="-j$(getconf _NPROCESSORS_ONLN)"
  export SCRATCH_DIR="$PWD/scratch"
  export VROOT="$SCRATCH_DIR/vroot"
  export LIBDIR="$VROOT/lib"
  export LD_LIBRARY_PATH="$LIBDIR"
  export PATH="$VROOT/bin:$PATH"
  export PKG_CONFIG_PATH="$LIBDIR/pkgconfig"

.native_git_build_job:
  script:
    - *git_build_vars
    - pushd "$PWD"
    - mkdir -p "$SCRATCH_DIR"
    - cd "$SCRATCH_DIR"
    - git clone --depth 1 https://gitlab.com/libvirt/libvirt.git
    - cd libvirt
    - meson build -Ddriver_libvirtd=disabled "--prefix=$VROOT" "--libdir=$LIBDIR"
    - ninja -C build install
    - popd
    - go build
    - go test

.native_git_build_job_prebuilt_env:
  extends:
    - .native_git_build_job
    - .gitlab_native_build_job_prebuilt_env

.native_git_build_job_local_env:
  extends:
    - .native_git_build_job
    - .gitlab_native_build_job_local_env

.native_build_job:
  script:
    - go build -x
    - go test
    - go build -x -tags libvirt_without_qemu -tags libvirt_without_lxc
    - go test

.native_build_job_prebuilt_env:
  extends:
    - .native_build_job
    - .gitlab_native_build_job_prebuilt_env

.native_build_job_local_env:
  extends:
    - .native_build_job
    - .gitlab_native_build_job_local_env

include: '/ci/gitlab.yml'

.api_coverage_job:
  stage: sanity_checks
  script:
    - *git_build_vars
    - go test -tags api
  allow_failure: true

api_coverage_prebuilt_env:
  extends:
    - .gitlab_native_build_job_prebuilt_env
    - .api_coverage_job
  needs:
    - job: x86_64-almalinux-8-git-prebuilt-env
      artifacts: true
  variables:
    NAME: almalinux-8

api_coverage_local_env:
  extends:
    - .gitlab_native_build_job_local_env
    - .api_coverage_job
  needs:
    - job: x86_64-almalinux-8-git-local-env
      artifacts: true
  variables:
    IMAGE: docker.io/library/almalinux:8
    NAME: almalinux-8
